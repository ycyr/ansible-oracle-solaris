---

  hostgroup: "{{ group_names[0] }}"
  oracle_dbca_rsp: "dbca_{{ item.0.oracle_db_name }}.rsp"        # Name of responsefile used by dbca. One per database
  oracle_netca_rsp: "netca_{{ item.home }}_{{ listener_name_template }}.rsp"
  oracle_user: oracle                        # User that will own the Oracle Installations.
  oracle_user_home: "/home/{{ oracle_user }}" # Home directory for oracle_user. Needed for passing in ssh-keys, profiles etc
  oracle_group: oinstall                          # Primary group for oracle_user.
  oracle_dba_group: dba                          # Primary group for oracle_user.
  grid_dba_group: asmdba                          # Primary group for oracle_user.

  oracle_home_db: "{% if item.0 is defined %}{% if item.0.oracle_home is defined %}{{ item.0.oracle_home}}{% else %}{{ oracle_base }}/{{ item.0.oracle_version_db }}/{{ item.0.home }}{% endif %}{% else %}{% if item.oracle_home is defined %}{{ item.oracle_home }}{% else %}{{ oracle_base }}/{{ item.oracle_version_db }}/{{ item.home }}{% endif %}{% endif %}"

  oracle_stage: /u01/stage
  oracle_rsp_stage: "{{ oracle_stage }}/rsp"
  oracle_inventory_loc: /u01/app/oraInventory
  oracle_base: /u01/app/oracle
  oracle_profile_name: ".profile_{{ item.oracle_db_name }}"       # Name of profile-file. Sets up the environment for that database. One per database
  oracle_dbf_dir_fs: /u01/oradata/                                # If storage_type=FS this is where the database is placed.
  oracle_reco_dir_fs: /u01/fra/                                   # If storage_type=FS this is where the fast recovery area is placed.
  oracle_dbf_dir_asm: '+DATA'                                        # If storage_type=ASM this is where the database is placed.
  oracle_reco_dir_asm: '+FRA'                                        # If storage_type=ASM this is where the fast recovery area is placed
  datafile_dest: "{% if item.0.storage_type|upper == 'FS' %}{{ oracle_dbf_dir_fs }}{% elif item.0.storage_type|upper == 'ASM' %}{{ oracle_dbf_dir_asm }}{% else %}{% endif %}"
  recoveryfile_dest: "{% if item.0.storage_type|upper == 'FS' %}{{ oracle_reco_dir_fs }}{% elif item.0.storage_type|upper == 'ASM' %}{{ oracle_reco_dir_asm }}{% else %}{% endif %}"
  configure_cluster: false
  #oracle_install_option_gi: "none"
  oracle_gi_cluster_type: STANDARD
  hostgroup_hub: "{{ hostgroup }}-hub"
  hostgroup_leaf: "{{ hostgroup }}-leaf"
  create_listener: "{% if oracle_install_option_gi is defined %}False{% elif oracle_install_option_gi is undefined %}{% if item.listener_name is defined %}True{% else %}False{% endif %}{% endif %}"
  listener_name_template: "{% if item.listener_name is defined %}{{ item.listener_name }}{% else %}{{ listener_name }}{% endif %}"
  listener_protocols_template: "{% if item.listener_protocols is defined %}{{ item.listener_protocols }}{% else %}{{ listener_protocols }}{% endif %}"
  listener_port_template: "{% if item.listener_port is defined %}{{ item.listener_port }}{% else %}{{ listener_port }}{% endif %}"
  listener_name: LISTENER
  listener_protocols: TCP
  listener_port: 1521
  autostartup_service: false

# Everything between the lines START-OF-PASSWORDS & END-OF-PASSWORDS can be
# put in an external passwords.yml file and be encrypted by Vault.
# The file should be put in 'group_vars/<your-config>/passwords.yml'
# This example will be broken out to a passwords.yml as soon as is allowed in ansible

## START-OF-PASSWORDS
  # GI
  default_gipass: "{% if oracle_password is defined %}{{ oracle_password }}{% else %}Oracle123{% endif%}" # The check for the old passwords are there for backwards compatibility and only temporary, will be removed
  sysasmpassword: "{% if oracle_password is defined %}{{ oracle_password }}{% else %}Oracle123{% endif%}" # The check for the old passwords are there for backwards compatibility and only temporary, will be removed
  asmmonitorpassword: "{% if oracle_password is defined %}{{ oracle_password }}{% else %}Oracle123{% endif%}" # The check for the old passwords are there for backwards compatibility and only temporary, will be removed
  # DB
  default_dbpass: "{% if item.0.oracle_db_passwd is defined %}{{ item.0.oracle_db_passwd}}{% else %}Oracle123{% endif%}" # The check for the old passwords are there for  backwards compatibility and only temporary, will be removed
  dbpasswords:
         orcl:
           sys: Oracle_456
           system: Oracle_456
           dbsnmp: Oracle_456
           pdbadmin: Oracle_456

## END-OF-PASSWORDS
  shell_ps1: "'[$LOGNAME'@'$ORACLE_SID `basename $PWD`]$'"
  shell_aliases:
     - "asmcmd='. oraenv ;rlwrap asmcmd -p'"
     - "sqlsyso='. oraenv ;rlwrap sqlplus \"/ as sysdba\"'"
     - "dgmgrl='rlwrap dgmgrl'"
     - "rman='rlwrap rman'"
     - "sid='. oraenv'"
     - "sqlp='rlwrap sqlplus'"
     - "sqlsys='rlwrap sqlplus \"/ as sysdba\"'"
     - "dbh='cd $ORACLE_HOME'"
     - "dbb='cd $ORACLE_BASE'"
     - "talert='tail -500f $ORACLE_BASE/diag/rdbms/$ORA_DB_UNQ_NAME/$ORACLE_SID/trace/alert_$ORACLE_SID.log'"

  dbca_templatename: General_Purpose.dbc
  dbca_initParams: "{% if '12.2' in item.0.oracle_version_db %} -initParams db_name={{item.0.oracle_db_name}}{% if item.0.oracle_db_unique_name is defined %},db_unique_name={{item.0.oracle_db_unique_name}}{% endif %}{% endif %}"

# This is an example layout of a database installation
  oracle_databases:                                            # Dictionary describing the databases to be installed
        - home: db1                                            # 'Last' directory in ORACLE_HOME path (e.g /u01/app/oracle/12.1.0.2/racdb)
          oracle_version_db: 12.2.0.1                          # Oracle versiono
          oracle_edition: EE                                   # The edition of database-server (EE,SE,SEONE)
          oracle_db_name: orcl                                 # Database name
          oracle_db_type: SI                                   # Type of database (RAC,RACONENODE,SI)
          is_container: False                                  # (true/false) Is the database a container database
          pdb_prefix: pdb
          num_pdbs: 1
          storage_type: FS                                     # Database storage to be used. ASM or FS.
          service_name: orcl_serv                              # Inital service to be created (not in use yet)
          oracle_init_params: ""                               # Specific parameters to be set during installation. Comma-separated list
          oracle_db_mem_totalmb: 1024                          # Amount of RAM to be used for SGA + PGA
          oracle_database_type: MULTIPURPOSE                   # MULTIPURPOSE|DATA_WAREHOUSING|OLTP
          redolog_size_in_mb: 100
          listener_name: LISTENER
          state: present                                        # present | absent
