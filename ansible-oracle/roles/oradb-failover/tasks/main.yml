---

  - name: Check if database is added to GI
    shell: "{{ oracle_home_gi_cl }}/bin/srvctl config database"
    with_items: oracle_databases
    when:  item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node
    register: dbcheck

  - name: Remove database from Oracle Restart configuration (if needed)
    shell: "{{ oracle_home_gi_cl }}/bin/srvctl remove database -d {{ item.oracle_db_name }} -f"
    with_items: oracle_databases
    when:  item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node and item.oracle_db_name in dbcheck.results


  - name: Create adump directory on other servers
    file: path={{ oracle_base }}/admin/{{ item.oracle_db_name }}/adump state=directory owner={{ oracle_user }} group={{ oracle_group }}
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and not master_node


  - name: Setup check script for DB Failover
    template: src=act_db.pl.j2 dest="{{ oracle_home_gi_cl }}/crs/public/act_db_{{ item.oracle_db_name }}.pl" backup=yes mode=755
    become_user: "{{ oracle_user }}"
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG'
    tags:
      - checkscript

  - name: Setup CRS attribute scripts for DB Failover
    template: src=attributes.txt.j2 dest="{{ oracle_stage }}/rsp/attributes_{{ item.oracle_db_name }}_crs.rsp" backup=yes
    become_user: "{{ oracle_user }}"
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG'
    tags:
      - checkscript
  
  - name: Check if resource is already present
    shell: "{{ oracle_home_gi_cl }}/bin/crsctl stat res {{ oracle_db_resource_name }} -t"
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node
    register: crsctlcheck

  - name: Add database resource to cluster (if needed)
    shell: "{{ oracle_home_gi_cl }}/bin/crsctl add resource {{ item.0.oracle_db_name }}.db -type cluster_resource -file {{ oracle_stage }}/rsp/attributes_{{ item.0.oracle_db_name }}_crs.rsp"
    with_together: 
        - oracle_databases
        - crsctlcheck.results
    when: item.0.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node and 'CRS-2613' in item.1.stdout

  - name: Copy stopscript
    template: src=shutdown-db.sh.j2 dest={{ oracle_stage }}/rsp/shutdown-db-{{ item.oracle_db_name }}.sh mode=0755 owner={{ oracle_user }} group={{ oracle_group }}
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node

  - name: Stop database
    shell: "{{ oracle_stage }}/rsp/shutdown-db-{{ item.oracle_db_name}}.sh"
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node
    ignore_errors: true

  - name: Start database as a cluster resource
    shell: "{{ oracle_home_gi_cl}}/bin/crsctl start res {{ oracle_db_resource_name }} "
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node

  - name: Check if resource is started
    shell: "{{ oracle_home_gi_cl}}/bin/crsctl stat res {{ oracle_db_resource_name }} -t"
    with_items: oracle_databases
    when: item.oracle_db_type|upper  == 'SIFO' and oracle_install_option_gi == 'CRS_CONFIG' and master_node
    register: statuscheck

  - name: Print status
    debug: var=item.stdout_lines
    with_items: statuscheck.results




