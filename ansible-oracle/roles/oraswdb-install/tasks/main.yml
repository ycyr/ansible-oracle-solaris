
  - name: install-home-db | Mount nfs share with installation media
    mount: src="{{ nfs_server_sw }}:{{ nfs_server_sw_path }}" name={{ oracle_stage_remote }} fstype=nfs state=mounted
    when: install_from_nfs
    tags:
      - nfsmountdb

  - name: install-home-db | Add oraInst.loc
    template: src=oraInst.loc.j2 dest=/etc/oraInst.loc owner={{ oracle_user }} group={{ oracle_group }} mode=644 backup=yes
    tags:
    - orainst

  - name: install-home-db | Create common directories
    file: dest={{ item.name }} mode={{ item.mode}} owner={{ item.owner }} group={{ item.group }} state=directory
    with_items: "{{oracle_directories}}"
    tags:
      - directoriesdb

  - name: install-home-db | Create stage directory (version specific)
    file: dest={{ oracle_stage }}/{{ db_version }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
    with_items:
       - "{{ db_homes_installed }}"
    run_once: "{{ configure_cluster}}"
    when: db_homes_installed is defined  and item.state|lower == 'present'
    tags:
      - directoriesdb

  - name: install-home-db | Create ORACLE_HOME directory
    file: dest={{ oracle_home_db }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
    with_items: "{{db_homes_installed}}"
    when: db_homes_config[item.home] is defined and item.state|lower == 'present'
    tags:
      - directoriesdb

  - include_tasks: "{{ www_download_bin }}.yml"
    when: not is_sw_source_local and oracle_sw_copy

  - name: install-home-db | Transfer oracle installfiles to server (local)
    copy: 
      src: "{{ oracle_sw_source_local }}/{{ db_homes_config[item[1].home].imagename | default(item[0].filename) }}"
      dest: "{{ oracle_stage }}" 
      mode: 775
      force: no
    with_nested:
      - "{{oracle_sw_image_db}}"
      - "{{db_homes_installed}}"
    become: yes
    become_user: "{{ oracle_user }}"
    run_once: "{{ configure_cluster}}"
    when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present'  and is_sw_source_local and oracle_sw_copy
    tags:
      - oradbsw

  #
  # - name: install-home-db | Extract files to stage-area
  #   unarchive:
  #       src={{ oracle_stage }}/{{ item[0].filename }}
  #       dest={{ oracle_stage }}/{{ item[0].version }}
  #       copy=no
  #       creates="{{ oracle_stage }}/{{ item[0].version }}/{{ item[0].creates}}"
  #   with_nested:
  #     - "{{oracle_sw_image_db}}"
  #     - "{{db_homes_installed}}"
  #   become: yes
  #   become_user: "{{ oracle_user }}"
  #   run_once: "{{ configure_cluster}}"
  #   when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present' and oracle_sw_copy and oracle_sw_unpack
  #   tags:
  #     - oradbswunpack
  #
  # - name: install-home-db | Extract files to stage-area (from remote location)
  #   unarchive:
  #       src={{ oracle_stage_remote }}/{{ item[0].filename }}
  #       dest={{ oracle_stage }}/{{ item[0].version }}
  #       copy=no
  #       creates="{{ oracle_stage }}/{{ item[0].version }}/{{ item[0].creates}}"
  #   with_nested:
  #     - "{{oracle_sw_image_db}}"
  #     - "{{db_homes_installed}}"
  #   become: yes
  #   become_user: "{{ oracle_user }}"
  #   run_once: "{{ configure_cluster}}"
  #   when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present'  and not oracle_sw_copy and oracle_sw_unpack
  #   tags:
  #     - oradbswunpack

  - include_tasks: install-home-db.yml
    with_items:
        - "{{ db_homes_installed }}"
    loop_control:
      loop_var: dbh
    when: db_homes_installed is defined and dbh.state|lower == 'present'
    tags: oradbinstall,dbchopt

  - name: install-home-db | Unmount nfs share with installation media
    mount: src="{{ nfs_server_sw }}:{{ nfs_server_sw_path }}" name={{ oracle_stage_remote }} fstype=nfs state=absent
    when: install_from_nfs
    tags:
      - nfsunmountdb

  - name: install-home-db | copy start/stop script for autostart
    copy: 
      dest: /usr/local/bin
      src: manage_oracle_rdbms_procs.sh
      mode: 0755
    tags: autostartup_service

  - include_tasks: "{{ hostinitdaemon }}.yml"
    when: autostartup_service
    tags: autostartup_service
